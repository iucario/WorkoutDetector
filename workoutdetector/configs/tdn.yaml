trainer:
  default_root_dir: exp/repcount-12-tdn # where to save logs and checkpoints
  max_epochs: 30

optimizer:
  method: TSN
  lr: 0.01
  momentum: 0.9
  weight_decay: 5.0e-4
  eps: 1.0e-8
lr_scheduler:
  policy: MultiStepLR
  gamma: 0.1
  step: 8
  steps: [5, 10, 20]
  warmup_epoch: 0

model:
  model_type: TDN
  num_class: 12
  num_segments: 8
  num_frames: 5
  example_input_array: [40, 3, 224, 224]
  base_model: resnet50
  consensus_type: avg
  dropout: 0.5
  partial_bn: false
  fc_lr5: false
  checkpoint: checkpoints/finetune/tdn_sthv2_r50_8x1x1.pth

data:
  dataset_type: TDNDataset
  data_root: /home/user/data
  num_segments: 8
  num_frames: 5
  filename_tmpl: "img_{:05}.jpg"
  anno_col: 4
  batch_size: 4
  num_workers: 8
  train:
    anno: /home/user/data/Binary/all-train.txt
    data_prefix: null
    transform:
      person_crop: false
  val:
    anno: /home/user/data/Binary/all-val.txt
    data_prefix: null
    transform:
      person_crop: false
  test:
    anno: /home/user/data/Binary/all-test.txt
    data_prefix: null
    transform:
      person_crop: false

log:
  output_dir: null # os.path.join(trainer.default_root_dir, timestamp)
  log_every_n_steps: 20
  csv:
    enable: true
  tensorboard:
    enable: true
  wandb:
    enable: true
    offline: false
    project: repcount-12-tdn
    name: null

callbacks:
  modelcheckpoint:
    save_top_k: 1
    save_weights_only: false
    monitor: val/acc
    mode: max
    dirpath: null # if None, defaults to log.output_dir
  early_stopping:
    enable: false
    patience: 10

seed: 0
train: true
timestamp: null # Will be initialized in python file
